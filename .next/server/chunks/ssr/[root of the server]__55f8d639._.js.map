{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/components/ui/navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/navbar.tsx <module evaluation>\",\n    \"Navbar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/components/ui/navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/navbar.tsx\",\n    \"Navbar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,sCACA","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/components/providers/session-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SessionProvider() from the server but SessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/session-provider.tsx <module evaluation>\",\n    \"SessionProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/components/providers/session-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SessionProvider() from the server but SessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/session-provider.tsx\",\n    \"SessionProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/env.ts"],"sourcesContent":["import { createEnv } from '@t3-oss/env-nextjs'\nimport { vercel } from '@t3-oss/env-nextjs/presets-zod'\nimport { z } from 'zod'\n\nexport const env = createEnv({\n  server: {\n    DATABASE_URL: z.string().url(),\n    PASSWORD_HASH_SALT: z\n      .string()\n      .transform((val) => Number.parseInt(val))\n      .pipe(z.number().min(1).max(15)),\n    JWT_SECRET: z.string().min(1),\n\n    AUTH_GITHUB_ID: z.string().min(1),\n    AUTH_GITHUB_SECRET: z.string().min(1),\n\n    AUTH_GOOGLE_ID: z.string().min(1),\n    AUTH_GOOGLE_SECRET: z.string().min(1)\n  },\n  client: {},\n  shared: {\n    NODE_ENV: z\n      .enum(['development', 'production', 'test'])\n      .default('development')\n  },\n  // If you're using Next.js < 13.4.4, you'll need to specify the runtimeEnv manually\n  // runtimeEnv: {\n  //   DATABASE_URL: process.env.DATABASE_URL,\n  //   OPEN_AI_API_KEY: process.env.OPEN_AI_API_KEY,\n  //   NEXT_PUBLIC_PUBLISHABLE_KEY: process.env.NEXT_PUBLIC_PUBLISHABLE_KEY,\n  // },\n  // For Next.js >= 13.4.4, you only need to destructure client variables:\n  experimental__runtimeEnv: {\n    NODE_ENV: process.env.NODE_ENV\n  },\n  extends: [vercel()]\n})\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,cAAc,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,oBAAoB,iLAAA,CAAA,IAAC,CAClB,MAAM,GACN,SAAS,CAAC,CAAC,MAAQ,OAAO,QAAQ,CAAC,MACnC,IAAI,CAAC,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC9B,YAAY,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAE3B,gBAAgB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC/B,oBAAoB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAEnC,gBAAgB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC/B,oBAAoB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACrC;IACA,QAAQ,CAAC;IACT,QAAQ;QACN,UAAU,iLAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAc;SAAO,EAC1C,OAAO,CAAC;IACb;IACA,mFAAmF;IACnF,gBAAgB;IAChB,4CAA4C;IAC5C,kDAAkD;IAClD,0EAA0E;IAC1E,KAAK;IACL,wEAAwE;IACxE,0BAA0B;QACxB,QAAQ;IACV;IACA,SAAS;QAAC,CAAA,GAAA,oKAAA,CAAA,SAAM,AAAD;KAAI;AACrB","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/db/schema/column.helpers.ts"],"sourcesContent":["import { timestamp } from 'drizzle-orm/pg-core'\nimport { createSchemaFactory } from 'drizzle-zod'\n\nexport const timestamps = {\n  updated_at: timestamp(),\n  created_at: timestamp().defaultNow().notNull(),\n  deleted_at: timestamp()\n}\n\nexport const { createInsertSchema, createSelectSchema, createUpdateSchema } =\n  createSchemaFactory({\n    // This configuration will only coerce dates. Set `coerce` to `true` to coerce all data types or specify others\n    coerce: {\n      date: true\n    }\n  })\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,MAAM,aAAa;IACxB,YAAY,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD;IACpB,YAAY,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,IAAI,UAAU,GAAG,OAAO;IAC5C,YAAY,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD;AACtB;AAEO,MAAM,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,GACzE,CAAA,GAAA,wIAAA,CAAA,sBAAmB,AAAD,EAAE;IAClB,+GAA+G;IAC/G,QAAQ;QACN,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/db/schema/user.schema.ts"],"sourcesContent":["import { InferSelectModel } from 'drizzle-orm'\nimport {\n  boolean,\n  integer,\n  pgTable,\n  primaryKey,\n  text,\n  timestamp,\n  uuid\n} from 'drizzle-orm/pg-core'\nimport type { AdapterAccount } from 'next-auth/adapters'\nimport {\n  createInsertSchema,\n  createSelectSchema,\n  createUpdateSchema,\n  timestamps\n} from './column.helpers'\n\nexport const users = pgTable('user', {\n  id: uuid('id').primaryKey().defaultRandom(),\n  name: text('name'),\n  email: text('email').unique(),\n  emailVerified: timestamp('emailVerified', { mode: 'date' }),\n  image: text('image'),\n  ...timestamps\n})\n\nexport const accounts = pgTable(\n  'account',\n  {\n    userId: uuid('userId')\n      .notNull()\n      .references(() => users.id, { onDelete: 'cascade' }),\n    type: text('type').$type<AdapterAccount['type']>().notNull(),\n    provider: text('provider').notNull(),\n    providerAccountId: text('providerAccountId').notNull(),\n    refresh_token: text('refresh_token'),\n    access_token: text('access_token'),\n    expires_at: integer('expires_at'),\n    token_type: text('token_type'),\n    scope: text('scope'),\n    id_token: text('id_token'),\n    session_state: text('session_state'),\n    ...timestamps\n  },\n  (account) => [\n    {\n      compoundKey: primaryKey({\n        columns: [account.provider, account.providerAccountId]\n      })\n    }\n  ]\n)\n\nexport const sessions = pgTable('session', {\n  sessionToken: text('sessionToken').primaryKey(),\n  userId: uuid('userId')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  expires: timestamp('expires', { mode: 'date' }).notNull(),\n  ...timestamps\n})\n\nexport const verificationTokens = pgTable(\n  'verificationToken',\n  {\n    identifier: text('identifier').notNull(),\n    token: text('token').notNull(),\n    expires: timestamp('expires', { mode: 'date' }).notNull(),\n    ...timestamps\n  },\n  (verificationToken) => [\n    {\n      compositePk: primaryKey({\n        columns: [verificationToken.identifier, verificationToken.token]\n      })\n    }\n  ]\n)\n\nexport const authenticators = pgTable(\n  'authenticator',\n  {\n    credentialID: text('credentialID').notNull().unique(),\n    userId: uuid('userId')\n      .notNull()\n      .references(() => users.id, { onDelete: 'cascade' }),\n    providerAccountId: text('providerAccountId').notNull(),\n    credentialPublicKey: text('credentialPublicKey').notNull(),\n    counter: integer('counter').notNull(),\n    credentialDeviceType: text('credentialDeviceType').notNull(),\n    credentialBackedUp: boolean('credentialBackedUp').notNull(),\n    transports: text('transports'),\n    ...timestamps\n  },\n  (authenticator) => [\n    {\n      compositePK: primaryKey({\n        columns: [authenticator.userId, authenticator.credentialID]\n      })\n    }\n  ]\n)\n\nexport type User = InferSelectModel<typeof users>\n\nexport const userSelectSchema = createSelectSchema(users)\nexport const userInsertSchema = createInsertSchema(users).omit({\n  created_at: true,\n  updated_at: true,\n  deleted_at: true\n})\nexport const userUpdateSchema = createUpdateSchema(users).omit({\n  created_at: true,\n  updated_at: true,\n  deleted_at: true\n})\n"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;AAOO,MAAM,QAAQ,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IACnC,IAAI,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,MAAM,UAAU,GAAG,aAAa;IACzC,MAAM,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACX,OAAO,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,SAAS,MAAM;IAC3B,eAAe,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,iBAAiB;QAAE,MAAM;IAAO;IACzD,OAAO,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACZ,GAAG,iIAAA,CAAA,aAAU;AACf;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAC5B,WACA;IACE,QAAQ,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,UACV,OAAO,GACP,UAAU,CAAC,IAAM,MAAM,EAAE,EAAE;QAAE,UAAU;IAAU;IACpD,MAAM,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,KAAK,GAA2B,OAAO;IAC1D,UAAU,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,YAAY,OAAO;IAClC,mBAAmB,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,qBAAqB,OAAO;IACpD,eAAe,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACpB,cAAc,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACnB,YAAY,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;IACpB,YAAY,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACjB,OAAO,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACZ,UAAU,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACf,eAAe,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACpB,GAAG,iIAAA,CAAA,aAAU;AACf,GACA,CAAC,UAAY;QACX;YACE,aAAa,CAAA,GAAA,+JAAA,CAAA,aAAU,AAAD,EAAE;gBACtB,SAAS;oBAAC,QAAQ,QAAQ;oBAAE,QAAQ,iBAAiB;iBAAC;YACxD;QACF;KACD;AAGI,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,WAAW;IACzC,cAAc,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,gBAAgB,UAAU;IAC7C,QAAQ,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,UACV,OAAO,GACP,UAAU,CAAC,IAAM,MAAM,EAAE,EAAE;QAAE,UAAU;IAAU;IACpD,SAAS,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,WAAW;QAAE,MAAM;IAAO,GAAG,OAAO;IACvD,GAAG,iIAAA,CAAA,aAAU;AACf;AAEO,MAAM,qBAAqB,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EACtC,qBACA;IACE,YAAY,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,cAAc,OAAO;IACtC,OAAO,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,SAAS,OAAO;IAC5B,SAAS,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,WAAW;QAAE,MAAM;IAAO,GAAG,OAAO;IACvD,GAAG,iIAAA,CAAA,aAAU;AACf,GACA,CAAC,oBAAsB;QACrB;YACE,aAAa,CAAA,GAAA,+JAAA,CAAA,aAAU,AAAD,EAAE;gBACtB,SAAS;oBAAC,kBAAkB,UAAU;oBAAE,kBAAkB,KAAK;iBAAC;YAClE;QACF;KACD;AAGI,MAAM,iBAAiB,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAClC,iBACA;IACE,cAAc,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,gBAAgB,OAAO,GAAG,MAAM;IACnD,QAAQ,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,UACV,OAAO,GACP,UAAU,CAAC,IAAM,MAAM,EAAE,EAAE;QAAE,UAAU;IAAU;IACpD,mBAAmB,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,qBAAqB,OAAO;IACpD,qBAAqB,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,uBAAuB,OAAO;IACxD,SAAS,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,WAAW,OAAO;IACnC,sBAAsB,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,wBAAwB,OAAO;IAC1D,oBAAoB,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,sBAAsB,OAAO;IACzD,YAAY,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACjB,GAAG,iIAAA,CAAA,aAAU;AACf,GACA,CAAC,gBAAkB;QACjB;YACE,aAAa,CAAA,GAAA,+JAAA,CAAA,aAAU,AAAD,EAAE;gBACtB,SAAS;oBAAC,cAAc,MAAM;oBAAE,cAAc,YAAY;iBAAC;YAC7D;QACF;KACD;AAKI,MAAM,mBAAmB,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD,EAAE;AAC5C,MAAM,mBAAmB,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,IAAI,CAAC;IAC7D,YAAY;IACZ,YAAY;IACZ,YAAY;AACd;AACO,MAAM,mBAAmB,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,IAAI,CAAC;IAC7D,YAAY;IACZ,YAAY;IACZ,YAAY;AACd","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/db/db.ts"],"sourcesContent":["import { drizzle as drizzleNeonPostgres } from 'drizzle-orm/neon-http'\nimport { drizzle as drizzlePostgres } from 'drizzle-orm/node-postgres'\nimport { env } from '@/env'\nimport { Pool } from 'pg'\nimport * as schema from './schema/index'\nimport { neon } from '@neondatabase/serverless'\n\nconst isProduction = env.NODE_ENV === 'production'\n\n// use neon for production, just postgres driver for development\nexport const db = isProduction\n  ? drizzleNeonPostgres(neon(env.DATABASE_URL), { schema })\n  : drizzlePostgres(\n      new Pool({\n        connectionString: env.DATABASE_URL\n      }),\n      { schema }\n    )\n\nexport type DB = typeof db\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;AAEA,MAAM,eAAe,mGAAA,CAAA,MAAG,CAAC,QAAQ,KAAK;AAG/B,MAAM,KAAK,eACd,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE,CAAA,GAAA,sJAAA,CAAA,OAAI,AAAD,EAAE,mGAAA,CAAA,MAAG,CAAC,YAAY,GAAG;IAAE,QAAA;AAAO,KACrD,CAAA,GAAA,4JAAA,CAAA,UAAe,AAAD,EACZ,IAAI,oGAAA,CAAA,OAAI,CAAC;IACP,kBAAkB,mGAAA,CAAA,MAAG,CAAC,YAAY;AACpC,IACA;IAAE,QAAA;AAAO","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/providers/auth/auth.ts"],"sourcesContent":["import { db } from '@/db/'\nimport { accounts, sessions, users, verificationTokens } from '@/db/schema'\nimport { DrizzleAdapter } from '@auth/drizzle-adapter'\nimport NextAuth from 'next-auth'\nimport Google from 'next-auth/providers/google'\nimport GitHub from 'next-auth/providers/github'\n\nexport const { handlers, auth, signIn, signOut } = NextAuth({\n  adapter: DrizzleAdapter(db, {\n    usersTable: users,\n    accountsTable: accounts,\n    sessionsTable: sessions,\n    verificationTokensTable: verificationTokens\n  }),\n  providers: [Google, GitHub],\n  callbacks: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n    async session({ session, user }: any) {\n      if (session?.user) {\n        session.user.id = user.id\n        session.user.image = user.image\n      }\n      return session\n    }\n  }\n})\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,SAAS,CAAA,GAAA,qJAAA,CAAA,iBAAc,AAAD,EAAE,wGAAA,CAAA,KAAE,EAAE;QAC1B,YAAY,8HAAA,CAAA,QAAK;QACjB,eAAe,8HAAA,CAAA,WAAQ;QACvB,eAAe,8HAAA,CAAA,WAAQ;QACvB,yBAAyB,8HAAA,CAAA,qBAAkB;IAC7C;IACA,WAAW;QAAC,qLAAA,CAAA,UAAM;QAAE,qLAAA,CAAA,UAAM;KAAC;IAC3B,WAAW;QACT,iGAAiG;QACjG,MAAM,SAAQ,EAAE,OAAO,EAAE,IAAI,EAAO;YAClC,IAAI,SAAS,MAAM;gBACjB,QAAQ,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE;gBACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK;YACjC;YACA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///Users/vladislavostapenko/Documents/GitHub/lab_03_next/app/layout.tsx"],"sourcesContent":["import type { Metadata } from 'next'\nimport { Geist, Geist_Mono } from 'next/font/google'\nimport './globals.css'\nimport { Navbar } from '@/components/ui/navbar'\nimport { SessionProvider } from '@/components/providers/session-provider'\nimport { auth } from '@/providers/auth/auth'\n\nconst geistSans = Geist({\n  variable: '--font-geist-sans',\n  subsets: ['latin']\n})\n\nconst geistMono = Geist_Mono({\n  variable: '--font-geist-mono',\n  subsets: ['latin']\n})\n\nexport const metadata: Metadata = {\n  title: 'Next.js Authentication Example',\n  description:\n    'A modern authentication example with Next.js, NextAuth, and shadcn/ui components'\n}\n\nexport default async function RootLayout({\n  children\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  const session = await auth()\n\n  return (\n    <html lang='en' suppressHydrationWarning className='dark'>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <SessionProvider session={session}>\n          <Navbar />\n          <div className='pt-20'>{children}</div>\n        </SessionProvider>\n      </body>\n    </html>\n  )\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;;;;;;;;;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aACE;AACJ;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,OAAI,AAAD;IAEzB,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;QAAC,WAAU;kBACjD,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8OAAC,+IAAA,CAAA,kBAAe;gBAAC,SAAS;;kCACxB,8OAAC,2HAAA,CAAA,SAAM;;;;;kCACP,8OAAC;wBAAI,WAAU;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAKlC","debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}